@startuml

title Frui.ts screen interfaces

interface IActivatable {
  +isActive: boolean

  +activate(): Promise<any> | void
  +deactivate(boolean close): Promise<any> | void
}

interface IScreen {
  +name: string
}

IScreen ..|> IActivatable

interface IConductor<TChild> {
  +tryActivateChild(TChild child): Promise<any> | void
  +closeChild(TChild child): Promise<any> | void
}

interface IHasActiveChild<TChild> {
  +activeChild: TChild
}

interface IChild<TParent> {
  +parent: TParent
  +canDeactivate(): Promise<boolean> | boolean
  +requestClose(): Promise<any> | void
}

interface ICanNavigate {
  +navigate(path: string, params: any): Promise<any> | void
  +getChildNavigationPath(item: IHasNavigationName, params: any): NavigationPath
}

@enduml
