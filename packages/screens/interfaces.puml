@startuml

title Frui.ts screen interfaces

interface IActivatable {
  +isActive: boolean

  +activate(): Promise<any> | void
  +canDeactivate(): Promise<boolean> | boolean
  +deactivate(close: boolean): Promise<any> | void
}

interface IScreen {
  +name: string
  +navigationName: string
}

IScreen ..|> IActivatable

interface IConductor<TChild> {
  +tryActivateChild(child: TChild): Promise<boolean> | void
  +closeChild(child: TChild): Promise<boolean> | void
}

interface IHasActiveChild<TChild> {
  +activeChild: TChild
}

interface IChild<TParent> {
  +parent: TParent
  +requestClose(): Promise<any> | void
}

interface ICanNavigate {
  +navigate(subPath: string, params: any): Promise<any> | void
  +getNavigationPath(): NavigationPath
}

interface INavigationParent<TChild> {
  +getChildNavigationPath(child: TChild): NavigationPath
}

@enduml
