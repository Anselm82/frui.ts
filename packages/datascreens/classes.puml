@startuml

title Frui.ts data screens

package Screens {
  class ConductorSingleChild {}

  class ScreenBase {}
}

class ListViewModel {
  +items: TEntity[]
  +currentPaging: IPagingInfo

  #setData([items, paging]: PagedQueryResult<TEntity>): void
}

ListViewModel --|> ConductorSingleChild

class FilteredListViewModel {
  +filter: TFilter
  +pagingFilter: IPagingFilter

  #appliedFilter: TFilter

  .. Helpers ..

  +applyFilter(): void
  +applyFilterAndLoad(): Promise

  +resetFilter(): void
  +resetFilterAndLoad(): Promise

  .. Abstract functions ..
  +{abstract} loadData(): Promise | void
  #{abstract} resetFilterValues(filter: TFilter): void
}

FilteredListViewModel --|> ListViewModel

class DetailViewModel {
  +busyWatcher: BusyWatcher
  +item: TDetail

  #setItem(item: TDetail)

  .. Abstract functions ..
  #{abstract} loadDetail(): Promise<TDetail>;
}

DetailViewModel --|> ScreenBase
DetailViewModel --* ListViewModel

@enduml
